[tox]
envlist = py36,py37,py38,py39

[testenv]
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    PIP_EXTRA_INDEX_URL = https://artefact.skao.int/repository/pypi-all/simple
allowlist_externals = mkdir
deps =
    -rgitlab-ci-requirements.txt
commands =
    mkdir -p build/htmlcov
    mkdir -p build/reports
    # this ugly hack is here because:
    # https://github.com/tox-dev/tox/issues/149
    python -m pip install -U -r{toxinidir}/gitlab-ci-requirements.txt
    python -m pytest katpoint/test

[testenv:docs]
skip_install = true
description = build documentation
allowlist_externals = mkdir
commands =
    mkdir -p build/html
    sphinx-build -T -E -b html -D language=en doc build/html

[testenv:lint]
skip_install = true
description = report linting
allowlist_externals =
    mkdir
    bash
commands =
    mkdir -p build/reports
    bash -c "pylint --exit-zero --output-format=parseable katpoint | tee  ./build/reports/pylint.txt"
    bash -c "pylint --exit-zero --output-format=pylint_junit.JUnitReporter katpoint | tee ./build/reports/linting.xml"

[testenv:package]
passenv = PACKAGE_TAG
skip_install = true
description = build packages and check validity
deps =
    twine
    wheel
commands =
    python setup.py sdist bdist_wheel
    twine check dist/*.whl

[testenv:darglint]
skip_install = true
description = cross-check docstrings with function signature
deps =
    darglint >= 1.2.0
commands =
    darglint katpoint

[pytest]
addopts = --cov katpoint --json-report --json-report-file=build/htmlcov/report.json --cov-report term --cov-report html:build/htmlcov --cov-report xml:build/reports/code-coverage.xml --junitxml=build/reports/unit-tests.xml
testpaths =
    katpoint/test

[darglint]
docstring_style=numpy
strictness=long
