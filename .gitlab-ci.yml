# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: $SKA_K8S_TOOLS_DEPLOY_IMAGE

# before_script is used to define the command that should be run before all jobs, including deploy jobs, but after the restoration of artifacts.
# This can be an array or a multi-line string.
before_script:
  - python3 -m pip install -r gitlab-ci-requirements.txt

stages:
  - lint
  - test
  - docs
  - build
  - publish
  - deploy

lint:
  stage: lint
  tags:
    - k8srunner
  script:
    - tox -e lint
  artifacts:
    paths:
      - build/
    when: always

test:
  stage: test
  tags:
    - k8srunner
  script:
    - tox -e py38
  artifacts:
    paths:
      - build/
    reports:
      junit: build/reports/unit-tests.xml
    when: always

docs:
  stage: docs
  tags:
    - k8srunner
  before_script:
    - echo "error" > .docs_status
    - python3 -m pip install -r gitlab-ci-requirements.txt
    - python3 -m pip install anybadge
  script:
    - tox -e docs
    - echo "pass" > .docs_status
  after_script:
    - mkdir -p build/badges
    - anybadge --label=docs --value=$(cat .docs_status) --file=build/badges/docs.svg pass=green error=red
  artifacts:
    paths:
      - ./build/badges
      - ./build/html
    when: always
    expire_in: 7 days

pages:
  stage: deploy
  tags:
    - k8srunner
  dependencies:
    - test
  script:
    - ls -la
    - mkdir .public
    - cp -r ./build/htmlcov/* .public
    - rm -rf ./build/htmlcov
    - mv .public public
  artifacts:
    paths:
      - public
    expire_in: 30 days

include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/build_wheel.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'
